# platform = multi_platform_fedora,multi_platform_rhel,multi_platform_rhv,multi_platform_sle
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low

- name: Set variable ruta
  set_fact:
    ruta: "/etc/audit/audit.rules"

- name: Check if /etc/audit/rules.d exists
  stat:
    path: /etc/audit/rules.d
  register: stat_result

- name: Set variable if /etc/audit/rules.d exists
  set_fact:
    ruta: "/etc/audit/rules.d/file_deletion_events.rules"
  when: stat_result.stat.exists == True

- name: Adding remediation to audit.rules - 32 bits
  blockinfile:
    path: "{{ ruta }}"
    create: yes
    block: |
      -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    marker: "# {mark} ANSIBLE MANAGED BLOCK for file_deletion_events"
  when: ansible_architecture == "x86_32"

- name: Adding remediation to audit.rules - 64 bits
  blockinfile:
    path: "{{ ruta }}"
    create: yes
    block: |
      -a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
      -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    marker: "# {mark} ANSIBLE MANAGED BLOCK for file_deletion_events"
  when: ansible_architecture == "x86_64"

- name: Check if it's inmutable
  command: grep -qi "^\s*[^#]*-e 2" /etc/audit/audit.rules
  ignore_errors: True
  register: is_inmutable

- debug:
    msg: Reboot required
  when: is_inmutable.rc == 0

- name: Reload rules
  command: augenrules --load
  when: is_inmutable.rc == 1